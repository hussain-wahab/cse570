Terminals which are not used

   '|'
   '&'
   '%'


State 20 conflicts: 4 reduce/reduce


Grammar

    0 $accept: list $end

    1 list: /* empty */
    2     | list stat '\n'
    3     | list error '\n'

    4 stat: expr
    5     | LETTER '=' expr

    6 expr: '(' expr ')'
    7     | expr '*' expr
    8     | '*' expr
    9     | expr '/' expr
   10     | '/' expr
   11     | expr '+' expr
   12     | '+' expr
   13     | expr '-' expr
   14     | '-' expr
   15     | '-' expr
   16     | LETTER
   17     | number
   18     | EXIT
   19     | VARS

   20 number: DIGIT


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3
'%' (37)
'&' (38)
'(' (40) 6
')' (41) 6
'*' (42) 7 8
'+' (43) 11 12
'-' (45) 13 14 15
'/' (47) 9 10
'=' (61) 5
'|' (124)
error (256) 3
DIGIT (258) 20
LETTER (259) 5 16
EXIT (260) 18
VARS (261) 19
UMINUS (262)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
list (20)
    on left: 1 2 3, on right: 0 2 3
stat (21)
    on left: 4 5, on right: 2
expr (22)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19,
    on right: 4 5 6 7 8 9 10 11 12 13 14 15
number (23)
    on left: 20, on right: 17


state 0

    0 $accept: . list $end

    $default  reduce using rule 1 (list)

    list  go to state 1


state 1

    0 $accept: list . $end
    2 list: list . stat '\n'
    3     | list . error '\n'

    $end    shift, and go to state 2
    error   shift, and go to state 3
    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 5
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    stat    go to state 13
    expr    go to state 14
    number  go to state 15


state 2

    0 $accept: list $end .

    $default  accept


state 3

    3 list: list error . '\n'

    '\n'  shift, and go to state 16


state 4

   20 number: DIGIT .

    $default  reduce using rule 20 (number)


state 5

    5 stat: LETTER . '=' expr
   16 expr: LETTER .

    '='  shift, and go to state 17

    $default  reduce using rule 16 (expr)


state 6

   18 expr: EXIT .

    $default  reduce using rule 18 (expr)


state 7

   19 expr: VARS .

    $default  reduce using rule 19 (expr)


state 8

   12 expr: '+' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 19
    number  go to state 15


state 9

   14 expr: '-' . expr
   15     | '-' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 20
    number  go to state 15


state 10

    8 expr: '*' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 21
    number  go to state 15


state 11

   10 expr: '/' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 22
    number  go to state 15


state 12

    6 expr: '(' . expr ')'

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 23
    number  go to state 15


state 13

    2 list: list stat . '\n'

    '\n'  shift, and go to state 24


state 14

    4 stat: expr .
    7 expr: expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 4 (stat)


state 15

   17 expr: number .

    $default  reduce using rule 17 (expr)


state 16

    3 list: list error '\n' .

    $default  reduce using rule 3 (list)


state 17

    5 stat: LETTER '=' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 29
    number  go to state 15


state 18

   16 expr: LETTER .

    $default  reduce using rule 16 (expr)


state 19

    7 expr: expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   12     | '+' expr .
   13     | expr . '-' expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 12 (expr)


state 20

    7 expr: expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr
   14     | '-' expr .
   15     | '-' expr .

    '+'       reduce using rule 14 (expr)
    '+'       [reduce using rule 15 (expr)]
    '-'       reduce using rule 14 (expr)
    '-'       [reduce using rule 15 (expr)]
    '*'       reduce using rule 15 (expr)
    '/'       reduce using rule 15 (expr)
    '\n'      reduce using rule 14 (expr)
    '\n'      [reduce using rule 15 (expr)]
    ')'       reduce using rule 14 (expr)
    ')'       [reduce using rule 15 (expr)]
    $default  reduce using rule 14 (expr)


state 21

    7 expr: expr . '*' expr
    8     | '*' expr .
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr

    $default  reduce using rule 8 (expr)


state 22

    7 expr: expr . '*' expr
    9     | expr . '/' expr
   10     | '/' expr .
   11     | expr . '+' expr
   13     | expr . '-' expr

    $default  reduce using rule 10 (expr)


state 23

    6 expr: '(' expr . ')'
    7     | expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    ')'  shift, and go to state 30


state 24

    2 list: list stat '\n' .

    $default  reduce using rule 2 (list)


state 25

   11 expr: expr '+' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 31
    number  go to state 15


state 26

   13 expr: expr '-' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 32
    number  go to state 15


state 27

    7 expr: expr '*' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 33
    number  go to state 15


state 28

    9 expr: expr '/' . expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 18
    EXIT    shift, and go to state 6
    VARS    shift, and go to state 7
    '+'     shift, and go to state 8
    '-'     shift, and go to state 9
    '*'     shift, and go to state 10
    '/'     shift, and go to state 11
    '('     shift, and go to state 12

    expr    go to state 34
    number  go to state 15


state 29

    5 stat: LETTER '=' expr .
    7 expr: expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 5 (stat)


state 30

    6 expr: '(' expr ')' .

    $default  reduce using rule 6 (expr)


state 31

    7 expr: expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   11     | expr '+' expr .
   13     | expr . '-' expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 11 (expr)


state 32

    7 expr: expr . '*' expr
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr
   13     | expr '-' expr .

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 13 (expr)


state 33

    7 expr: expr . '*' expr
    7     | expr '*' expr .
    9     | expr . '/' expr
   11     | expr . '+' expr
   13     | expr . '-' expr

    $default  reduce using rule 7 (expr)


state 34

    7 expr: expr . '*' expr
    9     | expr . '/' expr
    9     | expr '/' expr .
   11     | expr . '+' expr
   13     | expr . '-' expr

    $default  reduce using rule 9 (expr)
